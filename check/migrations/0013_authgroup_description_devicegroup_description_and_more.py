# Generated by Django 4.0.7 on 2022-08-26 12:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("check", "0012_remove_devicegroup_user_profile_devices_groups"),
    ]

    operations = [
        migrations.AddField(
            model_name="authgroup",
            name="description",
            field=models.TextField(
                blank=True, max_length=255, null=True, verbose_name="Описание"
            ),
        ),
        migrations.AddField(
            model_name="devicegroup",
            name="description",
            field=models.TextField(
                blank=True, max_length=255, null=True, verbose_name="Описание"
            ),
        ),
        migrations.AlterField(
            model_name="authgroup",
            name="login",
            field=models.CharField(max_length=64, verbose_name="Логин"),
        ),
        migrations.AlterField(
            model_name="authgroup",
            name="name",
            field=models.CharField(max_length=100, verbose_name="Название"),
        ),
        migrations.AlterField(
            model_name="authgroup",
            name="password",
            field=models.CharField(max_length=64, verbose_name="Пароль"),
        ),
        migrations.AlterField(
            model_name="authgroup",
            name="secret",
            field=models.CharField(
                blank=True,
                max_length=64,
                null=True,
                verbose_name="Пароль от привилегированного режима",
            ),
        ),
        migrations.AlterField(
            model_name="bras",
            name="ip",
            field=models.CharField(max_length=15, unique=True, verbose_name="IP адрес"),
        ),
        migrations.AlterField(
            model_name="bras",
            name="login",
            field=models.CharField(max_length=64, verbose_name="Логин"),
        ),
        migrations.AlterField(
            model_name="bras",
            name="name",
            field=models.CharField(max_length=10, verbose_name="Название"),
        ),
        migrations.AlterField(
            model_name="bras",
            name="password",
            field=models.CharField(max_length=64, verbose_name="Пароль"),
        ),
        migrations.AlterField(
            model_name="bras",
            name="secret",
            field=models.CharField(
                blank=True,
                max_length=64,
                null=True,
                verbose_name="Пароль от привилегированного режима",
            ),
        ),
        migrations.AlterField(
            model_name="devicegroup",
            name="name",
            field=models.CharField(max_length=100, verbose_name="Название"),
        ),
        migrations.AlterField(
            model_name="devices",
            name="auth_group",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="check.authgroup",
                verbose_name="Группа авторизации",
            ),
        ),
        migrations.AlterField(
            model_name="devices",
            name="group",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="check.devicegroup",
                verbose_name="Группа",
            ),
        ),
        migrations.AlterField(
            model_name="devices",
            name="ip",
            field=models.CharField(max_length=15, unique=True, verbose_name="IP адрес"),
        ),
        migrations.AlterField(
            model_name="devices",
            name="model",
            field=models.CharField(
                blank=True, max_length=100, null=True, verbose_name="Модель"
            ),
        ),
        migrations.AlterField(
            model_name="devices",
            name="name",
            field=models.CharField(
                max_length=100, unique=True, verbose_name="Имя оборудования"
            ),
        ),
        migrations.AlterField(
            model_name="devices",
            name="protocol",
            field=models.CharField(
                choices=[("snmp", "snmp"), ("telnet", "telnet"), ("ssh", "ssh")],
                default="telnet",
                max_length=6,
                verbose_name="Протокол для поиска интерфейсов",
            ),
        ),
        migrations.AlterField(
            model_name="devices",
            name="snmp_community",
            field=models.CharField(
                blank=True,
                max_length=64,
                null=True,
                verbose_name="(SNMP v2c) community",
            ),
        ),
        migrations.AlterField(
            model_name="devices",
            name="vendor",
            field=models.CharField(
                max_length=100, null=True, verbose_name="Производитель"
            ),
        ),
        migrations.AlterField(
            model_name="profile",
            name="devices_groups",
            field=models.ManyToManyField(
                to="check.devicegroup", verbose_name="Доступные группы оборудования"
            ),
        ),
        migrations.AlterField(
            model_name="profile",
            name="permissions",
            field=models.CharField(
                choices=[
                    ("read", "Чтение"),
                    ("reboot", "Перезагрузка порта"),
                    ("up_down", "Изменение состояния порта"),
                    ("bras", "Сброс сессий клиента"),
                ],
                default="read",
                max_length=15,
                verbose_name="Уровень доступа",
            ),
        ),
        migrations.AlterField(
            model_name="profile",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                primary_key=True,
                serialize=False,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пользователь",
            ),
        ),
    ]
