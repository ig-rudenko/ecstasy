volumes:
  redis-data:

services:

  frontend:
    image: ecstasy-frontend:18
    build: frontend_v
    restart: always
    ports:
      - "${WEB_BIND:-127.0.0.1}:${WEB_PORT:-8000}:80"
    volumes:
      - "./static:/usr/share/nginx/static"
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
    depends_on:
      - backend
    networks:
      - frontend

  backend:
    build: .
    image: ecstasy:18
    restart: always
    command: /bin/sh run.sh
    env_file:
      - .env
    environment:
      DJANGO_SUPERUSER_EMAIL: admin@example.com
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_PASSWORD: password1
      DJANGO_ENV: "${DJANGO_ENV:-prod}"

    volumes:
      - "./logs:/app/logs"
      - "./static:/app/static"
      - "./media:/app/media"
      - "./map_layer_files:/app/media/map_layer_files"
      - "./configurations:/configurations"

    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
    networks:
      - frontend
      - backend

  celery: &celery
    build: .
    image: ecstasy:18
    restart: always
    command: celery -A ecstasy_project worker -l INFO -c 4 -n worker1
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
    volumes:
      - "./logs:/app/logs"
      - "./media:/app/media"
      - "./map_layer_files:/app/media/map_layer_files"
      - "./configurations:/configurations"
    networks:
      - backend

  celery-beat:
    <<: *celery
    command: celery -A ecstasy_project beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler

  device-connector:
    build: .
    image: ecstasy:18
    command: python device_connector.py
    restart: always
    environment:
      DEVICE_CONNECTOR_TOKEN: "${DEVICE_CONNECTOR_TOKEN:-connector-token}"

      # Кол-во одновременных подключений к оборудованию по умолчанию.
      DEFAULT_POOL_SIZE: "${DEFAULT_POOL_SIZE:-3}"
      # Максимальное кол-во одновременных подключений к оборудованию.
      MAX_POOL_SIZE: "${MAX_POOL_SIZE:-3}"

      DEVICE_CONNECTOR_LOG_LEVEL: "${DEVICE_CONNECTOR_LOG_LEVEL:-INFO}"
      DEVICE_CONNECTOR_BIND_HOST: "${DEVICE_CONNECTOR_BIND_HOST:-0.0.0.0}"
      DEVICE_CONNECTOR_BIND_PORT: "${DEVICE_CONNECTOR_BIND_PORT:-8000}"
    networks:
      - backend

  redis:
    image: redis
    restart: always
    volumes:
      - "redis-data:/data"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 20s
      retries: 10
    networks:
      - backend

  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD:-99593284x3iou4txiou3}"
      MYSQL_USER: "${MYSQL_USER:-ecstasy}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD:-ecstasy_password}"
      MYSQL_DATABASE: "${MYSQL_DATABASE:-ecstasy}"
    restart: always
    volumes:
      - "./mysql_data:/var/lib/mysql"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    networks:
      - backend


networks:
  frontend:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-fron-ecstasy
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: ${FRONTEND_IPV4_NETWORK:-172.22.253.0/24}
        - subnet: ${FRONTEND_IPV6_NETWORK:-fd4d:6169:6c63:6f76::/64}

  backend:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-back-ecstasy
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: ${BACKEND_IPV4_NETWORK:-172.22.254.0/24}
        - subnet: ${BACKEND_IPV6_NETWORK:-fd4d:6169:6c63:6f77::/64}
